//! SeaORM Entity. Generated by sea-orm-codegen 0.9.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "board")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id:          i32,
    pub url:         String,
    pub name:        String,
    pub menu_id:     i32,
    pub category_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::category::Entity",
        from = "Column::CategoryId",
        to = "super::category::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Category,
    #[sea_orm(
        belongs_to = "super::menu::Entity",
        from = "Column::MenuId",
        to = "super::menu::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Menu,
    #[sea_orm(has_many = "super::thread::Entity")]
    Thread,
    #[sea_orm(has_many = "super::board_bookmark::Entity")]
    BoardBookmark,
}

impl Related<super::category::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Category.def()
    }
}

impl Related<super::menu::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Menu.def()
    }
}

impl Related<super::thread::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Thread.def()
    }
}

impl Related<super::board_bookmark::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BoardBookmark.def()
    }
}

impl ActiveModelBehavior for ActiveModel {
}
